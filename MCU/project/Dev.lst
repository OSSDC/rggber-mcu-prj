C51 COMPILER V9.51   DEV                                                                   12/26/2016 20:53:56 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE DEV
OBJECT MODULE PLACED IN ..\outputs\Dev.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ..\lib\Dev.c BROWSE INCDIR(..\inc) DEBUG OBJECTEXTEND PRINT(.\Dev.lst) TABS
                    -(2) OBJECT(..\outputs\Dev.obj)

line level    source

   1          #include <compiler_defs.h>
   2          #include <C8051F410_defs.h>                // SFR declarations
   3          #include <Dev.h>
   4          
   5          #define SYSCLK         49000000/2      // SYSCLK frequency in Hz
   6          #define BAUDRATE             9600      // Baud rate of UART in bps
   7          
   8          // Initialization function for device,
   9          // Call Init_Device() from your main program
  10          void Init_Device(void)
  11          {
  12   1          PCA_Init();
  13   1          Oscillator_Init();
  14   1          Port_IO_Init();   
  15   1          Ext_Interrupt_Init();
  16   1          UART0_Init();
  17   1      }
  18          
  19          // Peripheral specific initialization functions,
  20          // Called from the Init_Device() function
  21          void Port_IO_Init()
  22          {
  23   1          // P0.0  -  TX0 (UART0), Open-Drain, Analog
  24   1          // P0.1  -  RX0 (UART0), Open-Drain, Analog
  25   1          // P0.2  -  Unassigned,  Open-Drain, Analog
  26   1          // P0.3  -  Unassigned,  Open-Drain, Analog
  27   1          // P0.4  -  Skipped,     Open-Drain, Digital
  28   1          // P0.5  -  Skipped,     Open-Drain, Digital
  29   1          // P0.6  -  Skipped,     Open-Drain, Digital
  30   1          // P0.7  -  Skipped,     Open-Drain, Digital
  31   1      
  32   1          // P1.0  -  Skipped,     Push-Pull,  Digital
  33   1          // P1.1  -  Skipped,     Push-Pull,  Digital
  34   1          // P1.2  -  Skipped,     Push-Pull,  Digital
  35   1          // P1.3  -  Skipped,     Push-Pull,  Digital
  36   1          // P1.4  -  Skipped,     Open-Drain, Digital
  37   1          // P1.5  -  Skipped,     Open-Drain, Digital
  38   1          // P1.6  -  Skipped,     Open-Drain, Digital
  39   1          // P1.7  -  Skipped,     Open-Drain, Digital
  40   1      
  41   1          // P2.0  -  Skipped,     Open-Drain, Digital
  42   1          // P2.1  -  Skipped,     Open-Drain, Digital
  43   1          // P2.2  -  Skipped,     Push-Pull,  Digital
  44   1          // P2.3  -  Skipped,     Push-Pull,  Digital
  45   1          // P2.4  -  Unassigned,  Open-Drain, Analog
  46   1          // P2.5  -  Skipped,     Open-Drain, Digital
  47   1          // P2.6  -  Skipped,     Open-Drain, Digital
  48   1          // P2.7  -  Skipped,     Open-Drain, Digital
  49   1      
  50   1          P0MDIN    = 0xF0;
  51   1          P2MDIN    = 0xEF;
  52   1          P1MDOUT   = 0x0F;
  53   1          P2MDOUT   = 0x0C;
  54   1          P0SKIP    = 0x0F;
C51 COMPILER V9.51   DEV                                                                   12/26/2016 20:53:56 PAGE 2   

  55   1          P2SKIP    = 0x10;
  56   1          XBR0      = 0x01;
  57   1          XBR1      = 0x40;
  58   1      }
  59          
  60          
  61          void PCA_Init()
  62          {
  63   1          PCA0MD    &= ~0x40;
  64   1          PCA0MD    = 0x00;
  65   1      }
  66          
  67          void Oscillator_Init()
  68          {
  69   1          OSCICN    = 0x87;
  70   1      }
  71          
  72          void UART0_Init (void)
  73          {
  74   1         SCON0 = 0x10;                       // SCON0: 8-bit variable bit rate
  75   1                                             //        level of STOP bit is ignored
  76   1                                             //        RX enabled
  77   1                                             //        ninth bits are zeros
  78   1                                             //        clear RI0 and TI0 bits
  79   1         if (SYSCLK/BAUDRATE/2/256 < 1) {
  80   2            TH1 = -(SYSCLK/BAUDRATE/2);
  81   2            CKCON |=  0x08;                  // T1M = 1; SCA1:0 = xx
  82   2         } else if (SYSCLK/BAUDRATE/2/256 < 4) {
  83   2            TH1 = -(SYSCLK/BAUDRATE/2/4);
  84   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
  85   2            CKCON |=  0x01;
  86   2         } else if (SYSCLK/BAUDRATE/2/256 < 12) {
  87   2            TH1 = -(SYSCLK/BAUDRATE/2/12);
  88   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
  89   2         } else if (SYSCLK/BAUDRATE/2/256 < 48) {
  90   2            TH1 = -(SYSCLK/BAUDRATE/2/48);
  91   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
  92   2            CKCON |=  0x02;
  93   2         } else {
  94   2            while (1);                       // Error.  Unsupported baud rate
  95   2         }
  96   1      
  97   1         TL1 = TH1;                          // init Timer1
  98   1         TMOD &= ~0xf0;                      // TMOD: timer 1 in 8-bit autoreload
  99   1         TMOD |=  0x20;
 100   1         TR1 = 1;                            // START Timer1
 101   1         IP |= 0x10;                         // Make UART high priority
 102   1         ES0 = 1;                            // Enable UART0 interrupts
 103   1      }
 104          
 105          void Ext_Interrupt_Init (void)
 106          {
 107   1         TCON = 0x05;                        // /INT 0 and /INT 1 are edge triggered
 108   1      
 109   1         IT01CF = 0x76;                      // /INT0 active low; /INT0 on P0.6;
 110   1                                             // /INT1 active low; /INT1 on P0.7;
 111   1      
 112   1         EX0 = 1;                            // Enable /INT0 interrupts
 113   1         EX1 = 1;                            // Enable /INT1 interrupts
 114   1      }


C51 COMPILER V9.51   DEV                                                                   12/26/2016 20:53:56 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     88    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
